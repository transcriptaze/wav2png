package wav2png

import (
	"fmt"
	"image"
	"image/color"
)

type Palette struct {
	colours []color.NRGBA
}

func PaletteFromPng(png image.Image) (*Palette, error) {

	bounds := png.Bounds()
	if bounds.Empty() {
		return nil, fmt.Errorf("Cannot create palette from empty PNG")
	}

	h := bounds.Size().Y
	colours := make([]color.NRGBA, h)
	nrgba := color.NRGBAModel

	for i := 0; i < h; i++ {
		colours[i] = nrgba.Convert(png.At(0, i)).(color.NRGBA)
	}

	return &Palette{
		colours: colours,
	}, nil
}

func (p *Palette) realize() []color.NRGBA {
	return p.colours
}

var mono Palette = Palette{
	colours: []color.NRGBA{
		color.NRGBA{R: 0x00, G: 0x00, B: 0x00, A: 0x00},
		color.NRGBA{R: 0x80, G: 0x80, B: 0xff, A: 0xff},
	},
}

var ice Palette = Palette{
	colours: []color.NRGBA{
		color.NRGBA{R: 0x00, G: 0x00, B: 0x00, A: 0x00},
		color.NRGBA{R: 0xd3, G: 0xf0, B: 0xff, A: 0x40},
		color.NRGBA{R: 0xd3, G: 0xf0, B: 0xff, A: 0x80},
		color.NRGBA{R: 0xd3, G: 0xf0, B: 0xff, A: 0xc0},
		color.NRGBA{R: 0xd3, G: 0xf0, B: 0xff, A: 0xf0},

		// 123
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
		color.NRGBA{R: 0xd3, G: 0xf3, B: 0xff, A: 0xf0},
	},
}
